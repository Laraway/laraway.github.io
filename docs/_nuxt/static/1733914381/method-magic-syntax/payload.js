__NUXT_JSONP__("/method-magic-syntax", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y){return {data:[{page:{slug:o,description:"where('status', 1) или whereStatus(1)",heading:"Магический синтаксис",altHeadings:"Laraway",toc:[],body:{type:p,children:[{type:b,tag:h,props:{},children:[{type:a,value:q},{type:b,tag:r,props:{to:s},children:[{type:a,value:t}]},{type:a,value:u}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:w}]},{type:a,value:f},{type:a,value:f},{type:b,tag:k,props:{name:"cases\u002Fmethod-magic-syntax\u002Fwhere-regular"},children:[]},{type:a,value:f},{type:b,tag:k,props:{name:"cases\u002Fmethod-magic-syntax\u002Fwhere-magic"},children:[]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"\n  Обычно у разработчиков первая реакция\n  "},{type:b,tag:c,props:{className:[x]},children:[{type:a,value:"\"ух ты, а так можно было?\""}]},{type:a,value:". Да, действительно так "},{type:b,tag:"b",props:{},children:[{type:a,value:"можно, но не нужно"}]},{type:a,value:y}]},{type:a,value:f},{type:b,tag:n,props:{heading:"Читаемость кода",id:"readability"},children:[{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    Сначала код может показаться более \"гладким\", но выглядит он так только в простых примерах,\n    с простыми именами полей. Когда условий значительно больше, а имена становятся реальными,\n    то читаемость кода падает.\n  "}]},{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    В первом примере (обычный синтаксис) мы можем очень быстро, не вчитываясь, пробежаться глазами\n    и найти все "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" и поля по которым происходит выборка.\n    Это происходит благодаря визуальному отделению имени поля от имени метода и помогает в этом ещё и подсветка.\n  "}]},{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    Во втором примере, нам придётся вчитываться в название метода и искать\n    где заканчивается where и начинается имя колонки, и подсветка нам в этом не поможет.\n  "}]},{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    Субъективно, скажешь ты? Ок, двигаемся дальше.\n  "}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:n,props:{heading:"Поддержка IDE",id:"ide"},children:[{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    Следующая проблема альтернативного синтаксиса - это поддержка IDE. На сегодняшний день существует плагин, который\n    понимает такие методы, но позиция "},{type:b,tag:c,props:{className:[x]},children:[{type:a,value:"\"нужен плагин, чтобы работать с фреймворком\""}]},{type:a,value:" слабая.\n    Может лучше писать так, что бы код можно было поддерживать не привязываясь к IDE и плагинам?\n    Понимаю, когда иначе никак не написать или вариант превосходит в своей полезности, но в данном случае это не так.\n  "}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:n,props:{heading:"Конфликт методов",id:"conflict"},children:[{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    И самая главная проблема - конфликт с \"реальными\" методами QueryBuilder-а. Например:\n  "}]},{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereDate()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereTime()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereMonth()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereDay()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereYear()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereColumn()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereKey()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereExists()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereFullText()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereNot()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereHas()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereIn()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereBetween()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereJsonContains()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereNested()"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"whereSub()"}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:h,props:{},children:[{type:a,value:"\n    И это не полный список, который может дополняться с обновлениями фреймворка.\n    Маловероятно, что в БД будут поля с именами has или in, но такая вероятность всегда есть. А, например,\n    date, time, month, day, year, key, full_text встречаются достаточно часто. В данном случае будут вызваны методы фреймворка и\n    чтобы сделать выборку по полю, придётся писать обычный "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:", что делает код разностилевым\n    и как следствие напрашивается логичный вариант - писать в одном стиле.\n  "}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"\n  Я не буду отговаривать использовать \"магический синтаксис\", каждый делает выводы для себя сам,\n  но не вижу ни одного плюса, чтобы отказаться от обычного "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:y}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"\n  Тем не менее есть места, где \"магический синтаксис\" выглядит уместно и не доставляет проблем, например, в response:\n"}]},{type:a,value:f},{type:b,tag:k,props:{name:"cases\u002Fmethod-magic-syntax\u002Fwith-regular"},children:[]},{type:a,value:f},{type:b,tag:k,props:{name:"cases\u002Fmethod-magic-syntax\u002Fwith-magic"},children:[]}]},excerpt:{type:p,children:[{type:b,tag:h,props:{},children:[{type:a,value:q},{type:b,tag:r,props:{to:s},children:[{type:a,value:t}]},{type:a,value:u}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:w}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Fmethod-magic-syntax",extension:".md",createdAt:"2023-10-19T09:38:37.880Z",updatedAt:"2022-08-15T22:14:35.000Z"},id:o}],fetch:{"CodeChips:0":{code:"\u003Cpre class=\"torchlight\" style=\"background-color: #011627; --theme-selection-background: #4373c2;\" data-torchlight-processed=\"3449c9e5e332f1dbb81505cd739fbf3f\"\u003E\u003Ccode data-lang=\"php\"\u003E\u003C!-- Syntax highlighted by torchlight.dev --\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E regular syntax\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan style=\"color: #FFCB8B;\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E::\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Equery\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Ewhere\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #ECC48D;\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E, \u003C\u002Fspan\u003E\u003Cspan style=\"color: #F78C6C;\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E4\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Ewhere\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #ECC48D;\"\u003Estatus\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E, \u003C\u002Fspan\u003E\u003Cspan style=\"color: #F78C6C;\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E5\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E();\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Ctextarea data-torchlight-original=\"true\" style=\"display: none !important;\"\u003E\u002F\u002F regular syntax\nPost::query()\n  -&gt;where('id', 1)\n  -&gt;where('status', 1)\n  -&gt;first();\n\u003C\u002Ftextarea\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",copied:l,copiedTimeout:m},"CodeChips:1":{code:"\u003Cpre class=\"torchlight\" style=\"background-color: #011627; --theme-selection-background: #4373c2;\" data-torchlight-processed=\"3449c9e5e332f1dbb81505cd739fbf3f\"\u003E\u003Ccode data-lang=\"php\"\u003E\u003C!-- Syntax highlighted by torchlight.dev --\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E alternate magic syntax\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan style=\"color: #FFCB8B;\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E::\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Equery\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003EwhereId\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #F78C6C;\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E4\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003EwhereStatus\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #F78C6C;\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E5\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E();\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Ctextarea data-torchlight-original=\"true\" style=\"display: none !important;\"\u003E\u002F\u002F alternate magic syntax\nPost::query()\n  -&gt;whereId(1)\n  -&gt;whereStatus(1)\n  -&gt;first();\n\u003C\u002Ftextarea\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",copied:l,copiedTimeout:m},"CodeChips:2":{code:"\u003Cpre class=\"torchlight\" style=\"background-color: #011627; --theme-selection-background: #4373c2;\" data-torchlight-processed=\"3449c9e5e332f1dbb81505cd739fbf3f\"\u003E\u003Ccode data-lang=\"php\"\u003E\u003C!-- Syntax highlighted by torchlight.dev --\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E regular syntax\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Eresponse\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Ewith\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #ECC48D;\"\u003Esuccess\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E, \u003C\u002Fspan\u003E\u003Cspan style=\"color: #BEC5D4;\"\u003E$message\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Eresponse\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Ewith\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #ECC48D;\"\u003Eerrors\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D9F5DD;\"\u003E&#39;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E, \u003C\u002Fspan\u003E\u003Cspan style=\"color: #BEC5D4;\"\u003E$errors\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Ctextarea data-torchlight-original=\"true\" style=\"display: none !important;\"\u003E\u002F\u002F regular syntax\nresponse()-&gt;with('success', $message);\nresponse()-&gt;with('errors', $errors);\n\u003C\u002Ftextarea\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",copied:l,copiedTimeout:m},"CodeChips:3":{code:"\u003Cpre class=\"torchlight\" style=\"background-color: #011627; --theme-selection-background: #4373c2;\" data-torchlight-processed=\"3449c9e5e332f1dbb81505cd739fbf3f\"\u003E\u003Ccode data-lang=\"php\"\u003E\u003C!-- Syntax highlighted by torchlight.dev --\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan style=\"color: #637777;\"\u003E alternate magic syntax\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Eresponse\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003EwithSuccess\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #BEC5D4;\"\u003E$message\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color:#4b6479; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003Eresponse\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E()\u003C\u002Fspan\u003E\u003Cspan style=\"color: #7FDBCA;\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: #82AAFF;\"\u003EwithErrors\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: #BEC5D4;\"\u003E$errors\u003C\u002Fspan\u003E\u003Cspan style=\"color: #D6DEEB;\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Ctextarea data-torchlight-original=\"true\" style=\"display: none !important;\"\u003E\u002F\u002F alternate magic syntax\nresponse()-&gt;withSuccess($message);\nresponse()-&gt;withErrors($errors);\n\u003C\u002Ftextarea\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n",copied:l,copiedTimeout:m}},mutations:[]}}("text","element","span","bit","code","\n","\n    ","p","\n  ","where()","code-chips",false,null,"case-context-section","method-magic-syntax","root","\n  Laravel - фреймворк с лаконичным синтаксисом и местами он пытается угодить всем,\n  предоставляя разные способы написания одного и того же кода,\n  что часто приводит к ","nuxt-link","\u002Fintro\u002F","«laraway»"," спорам.\n","\n  Здесь я хочу рассмотреть сомнительную функциональность, которой нет в документации, но тем не менее её применяют -\n  это магические методы, речь не про саму \"магию\" в php, а про альтернативный синтаксис некоторых методов, например,\n  "," \n","italic",".\n")));
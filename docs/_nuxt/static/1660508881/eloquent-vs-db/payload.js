__NUXT_JSONP__("/eloquent-vs-db", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E){return {data:[{page:{slug:t,description:"Сравнение запросов Model и DB",heading:"Eloquent VS Facade DB",altHeadings:"Холивар",toc:[],body:{type:"root",children:[{type:b,tag:g,props:{},children:[{type:a,value:"\n  Eloquent - это мощная ORM, реализация шаблона ActiveRecord,\n  позволяющая комфортно работать с базой данных, например, с помощью таких вещей:\n  модели, связи, скоупы, события, аксессоры, мутаторы, касты...\n"}]},{type:a,value:h},{type:b,tag:g,props:{},children:[{type:a,value:"\n  Но, к сожалению, у удобства есть своя цена и в случае с Eloquent - это производительность\n  из-за дополнительного функционала.\n  Некоторые проекты и команды полностью отказываются от Eloquent в пользу DB фасада\n  и пропагандируют свой выбор как неопровержимо верное решение.\n  Данная тема периодически вспыхивает в чатах и почти всегда это переходит в холивар.\n  Вместо долгих рассуждений предлагаю сразу взглянуть на цифры.\n"}]},{type:a,value:h},{type:b,tag:k,props:{heading:"Условия",id:"condition"},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Замер был сделан на php 8.1, mysql 8.0, laravel 9.\n    Нас интересует "},{type:b,tag:l,props:{},children:[{type:a,value:"только разница между Eloquent и DB"}]},{type:a,value:",\n    время выполнения самих запросов относительно\n    и будет напрямую зависеть от конфигурации железа и ПО.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Модель использовалась пустой, без событий, кастов и трейтов, в реальном проекте чем больше будет навешано на модель функционала,\n    тем медленнее будут отрабатывать запросы, что логично.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Значения средние из 100 прогонов, в секундах.\n  "}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{heading:"Чтение",id:"read-time"},children:[{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:a,value:m},{type:b,tag:q,props:{className:[q]},children:[{type:a,value:e},{type:b,tag:w,props:{},children:[{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:"Чтение, строк"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:x}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:y}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:A}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:B,props:{},children:[{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"1"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00098"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00068"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.0003"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+44%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"10"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00136"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00071"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00065"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+91%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"100"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00373"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00088"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00285"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+320%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"1 000"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.02461"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00289"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.02172"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+750%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"10 000"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.22458"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.02122"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.20336"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+950%"}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:m}]},{type:a,value:f}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{heading:"Результаты чтения",id:"read-result"},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:m},{type:b,tag:l,props:{},children:[{type:a,value:"В чтении данных DB выигрывает у Eloquent"}]},{type:a,value:", но существенно сказывается только на больших объёмах данных,\n    запрос на 10К строк отработал в 9 раз быстрее.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Но при этом мы лишаемся всех удобств при работе с БД. В реальности чаще всего нам потребуется\n    дополнительная обработка данных, связи придётся доставать и компоновать вручную,\n    обновлять данные тоже необходимо вручную отдельным запросом... в общем как в старые добрые...\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Имеет ли смысл? "},{type:b,tag:l,props:{},children:[{type:a,value:"Лично я"}]},{type:a,value:" не вижу смысла отказываться от Eloquent,\n    ибо с таким же успехом можно отказаться и от самой Laravel.\n    Запросы можно переписать только там где это "},{type:b,tag:l,props:{},children:[{type:a,value:"действительно"}]},{type:a,value:" необходимо.\n    В более или менее среднем приложении придётся писать дополнительно \"репозитории\" или сервисы,\n    чтобы навести порядок и контролировать разбросанные и несвязные запросы, что приведёт рано или поздно к кастомной ORM,\n    но из костылей и палок.\n  "}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{heading:C,id:"write-time"},children:[{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:a,value:m},{type:b,tag:q,props:{className:[q,"mr-2"]},children:[{type:a,value:e},{type:b,tag:w,props:{},children:[{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:C}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:x}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:y}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:A}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:B,props:{},children:[{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:D}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00605"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00078"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+12%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00736"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00749"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"-0.00013"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"-1%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:D}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00589"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00094"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+16%"}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:i,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00617"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00578"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"0.00039"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"+6%"}]},{type:a,value:e}]},{type:a,value:e}]},{type:a,value:m}]},{type:a,value:f}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{heading:"Результаты записи",id:"write-result"},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Поскольку "},{type:b,tag:n,props:{className:[o,p]},children:[{type:a,value:E}]},{type:a,value:" может сохранить только одну запись за раз,\n    то не получится его сравнить с "},{type:b,tag:n,props:{className:[o,p]},children:[{type:a,value:s}]},{type:a,value:" в записи большого количества строк.\n    Один "},{type:b,tag:n,props:{className:[o,p]},children:[{type:a,value:s}]},{type:a,value:" очевидно будет работать быстрее, чем "},{type:b,tag:n,props:{className:[o,p]},children:[{type:a,value:E}]},{type:a,value:" в цикле.\n    Поэтому тестировать имело смысл только запись одной строки.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:m},{type:b,tag:l,props:{},children:[{type:a,value:"Преимущество DB при записи отсутствует."}]},{type:a,value:" В некоторых прогонах результат даже оказался хуже.\n    Различия можно списать на погрешность измерений.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Если необходимо вставить большое кол-во записей, то конечно "},{type:b,tag:n,props:{className:[o,p]},children:[{type:a,value:s}]},{type:a,value:"\n    это сделает эффективнее одним запросом, иначе смысла не вижу.\n  "}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{heading:"Выводы",id:"sum"},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Если не хватает производительности Eloquent,\n    то проблема скорей всего не решится отказом в пользу DB, а если и решится,\n    то надолго ли и как это повлияет на поддержку приложения и скорость разработки в перспективе?\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    В погоне за производительностью можно пойти ещё дальше (немного)\n    и отказаться от QueryBuilder и писать чистые SQL-запросы с DB или с PDO (и так до «чистого кода» можно продолжать).\n    Вопрос в том, действительно ли это решает проблему не принося новую?\n    Возможно, стоит рассмотреть другие способы хранения данных или увеличить производительность с помощью железа.\n  "}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"\n    Универсального ответа здесь быть не может, Eloquent позволяет быстро вести разработку\n    и влечёт за собой расходы ресурсов, как и любая другая логика. На самом деле, "},{type:b,tag:l,props:{},children:[{type:a,value:"с таким же успехом можно сравнивать\n    производительность фреймворков и чистого php..."}]},{type:a,value:f}]},{type:a,value:h}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Feloquent-vs-db",extension:".md",createdAt:"2022-08-14T20:25:14.422Z",updatedAt:"2022-08-14T20:25:14.426Z"},id:t}],fetch:{},mutations:[]}}("text","element","\n        ","td","\n      ","\n  ","p","\n","tr","th","case-context-section","b","\n    ","span","bit","code","table","1 строка","insert()","eloquent-vs-db","div","overflow-x-auto","thead","Eloquent","DB","Разница","Эффективность","tbody","Запись","0.00683","create()")));
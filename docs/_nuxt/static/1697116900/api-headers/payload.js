__NUXT_JSONP__("/api-headers", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{page:{slug:q,description:"Отправь application\u002Fjson в заголовках Accept и Content-Type",heading:"Заголовки для API",altHeadings:"как вернуть json",toc:[],body:{type:r,children:[{type:b,tag:f,props:{heading:s,id:t},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:u},{type:b,tag:i,props:{},children:[]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:w},{type:b,tag:j,props:{title:x,uri:y},children:[]},{type:a,value:z}]},{type:a,value:e}]},{type:a,value:e},{type:a,value:e},{type:b,tag:f,props:{heading:"Теория",id:"why"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Laravel может автоматически возвращать json для обычных или XHR запросов.\n    Поведение управляется с помощью заголовков:\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:h},{type:b,tag:m,props:{title:"Accept",link:"https:\u002F\u002Fdeveloper.mozilla.org\u002Fru\u002Fdocs\u002FWeb\u002FHTTP\u002FHeaders\u002FAccept"},children:[]},{type:a,value:"\n    сообщает приложению какой тип данных он ожидает в ответе.\n    "},{type:b,tag:i,props:{},children:[]},{type:a,value:h},{type:b,tag:m,props:{title:"Content-Type",link:"https:\u002F\u002Fdeveloper.mozilla.org\u002Fru\u002Fdocs\u002FWeb\u002FHTTP\u002FHeaders\u002FContent-Type"},children:[]},{type:a,value:"\n    сообщает о типе данных в запросе или ответе.\n  "}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:f,props:{heading:"Решение",id:"solution"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Таким образом, необходимо с клиента отправить правильные заголовки для json:\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:h},{type:b,tag:k,props:{className:[l]},children:[{type:a,value:"Accept: application\u002Fjson"}]},{type:a,value:h},{type:b,tag:i,props:{},children:[]},{type:a,value:h},{type:b,tag:k,props:{className:[l]},children:[{type:a,value:"Content-Type: application\u002Fjson"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:A},{type:b,tag:j,props:{title:B,uri:"requests#retrieving-json-input-values"},children:[]},{type:a,value:"\n    Content-Type укажет фреймворку, что входящие данные являются json\n    и таким образом можно будет работать с ними как с обычными\n    или массивом, не прибегая к предварительному декодированию с помощью\n    "},{type:b,tag:k,props:{className:[l,C]},children:[{type:a,value:"json_decode()"}]},{type:a,value:c}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:f,props:{heading:"Ответ приложения",id:"response"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:A},{type:b,tag:j,props:{title:B,uri:"responses#json-responses"},children:[]},{type:a,value:"\n    метод "},{type:b,tag:k,props:{className:[l,C]},children:[{type:a,value:"response()-\u003Ejson()"}]},{type:a,value:"\n    автоматически конвертирует данные в json и устанавливает необходимые заголовки,\n    поэтому никаких дополнительных действий не требуется.\n  "}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:f,props:{heading:"Всегда json",id:"only-json"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Если Laravel используется как API и всегда запрос\u002Fответ должны быть в json, то можно установить заголовки в middleware:\n  "}]},{type:a,value:c},{type:b,tag:n,props:{name:"cases\u002Fapi-headers\u002Fmiddleware-set"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Это позволит клиентам не устанавливать заголовки, но вопрос "},{type:b,tag:D,props:{},children:[{type:a,value:"действительно ли это так необходимо"}]},{type:a,value:"?\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Другой вариант - проверять в middleware заголовки и возвращать\n    "},{type:b,tag:m,props:{title:"406 Not Acceptable",link:"https:\u002F\u002Fdeveloper.mozilla.org\u002Fru\u002Fdocs\u002FWeb\u002FHTTP\u002FStatus\u002F406"},children:[]},{type:a,value:",\n    или любой другой код ошибки.\n    "},{type:b,tag:D,props:{},children:[{type:a,value:"На мой взгляд"}]},{type:a,value:", так будет правильнее.\n  "}]},{type:a,value:c},{type:b,tag:n,props:{name:"cases\u002Fapi-headers\u002Fmiddleware-check"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    А ещё лучше это сделать на уровне nginx (web-сервера), а не php.\n  "}]},{type:a,value:c},{type:b,tag:n,props:{name:"cases\u002Fapi-headers\u002Fnginx-check"},children:[]},{type:a,value:e}]}]},excerpt:{type:r,children:[{type:b,tag:f,props:{heading:s,id:t},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:u},{type:b,tag:i,props:{},children:[]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:w},{type:b,tag:j,props:{title:x,uri:y},children:[]},{type:a,value:z}]},{type:a,value:e}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Fapi-headers",extension:".md",createdAt:"2022-08-15T13:41:49.912Z",updatedAt:"2022-08-15T19:05:35.574Z"},id:q}],fetch:{"CodeChips:0":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fapi-headers\u002Fmiddleware-set.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:o,errno:g,code:g,statusCode:p}},"CodeChips:1":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fapi-headers\u002Fmiddleware-check.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:o,errno:g,code:g,statusCode:p}},"CodeChips:2":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fapi-headers\u002Fnginx-check.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:o,errno:g,code:g,statusCode:p}}},mutations:[]}}("text","element","\n  ","p","\n","case-context-section","ECONNREFUSED","\n    ","br","laravel-link","span","bit","external-link","code-chips","system",500,"api-headers","root","Проблема","problem","\n    Например, ошибка валидации перенаправляет на предыдущий адрес и добавляет текст ошибок в сессию.\n    ","Критическая ошибка отобразит html страницу с подробным описанием или просто с текстом «Error 500», если\n    выключен debug.\n  ","\n    Но что если в ответе необходим json? Для\n    ","валидации","validation#validation-error-response-format","\n    сказано, что если запрос ожидает json, то фреймворк автоматически вернёт его с соответствующим кодом.\n    Что это значит?\n  ","\n    Согласно ","документации","code","b")));
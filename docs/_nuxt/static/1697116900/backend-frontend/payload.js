__NUXT_JSONP__("/backend-frontend", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:[{page:{slug:p,description:"Ajax, переменная в script или html-атрибут",heading:"Передача данных в JS",altHeadings:null,toc:[],body:{type:q,children:[{type:b,tag:d,props:{},children:[{type:a,value:r},{type:b,tag:h,props:{className:[s]},children:[{type:a,value:t}]},{type:a,value:u}]},{type:a,value:e},{type:a,value:e},{type:b,tag:j,props:{heading:"AJAX",id:"ajax"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Самый очевидный и популярный способ, это сделать AJAX-запрос на api,\n    в ответе получим необходимые данные, например, в json или html.\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Подходит если данные не нужны во время первого выполнения и мы можем получить их позже в фоне.\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Один из популярных примеров - это фильтр товаров. Поскольку выборка из базы данных может занять некоторое время,\n    то для ускорения загрузки основной страницы (первого ответа сервера)\n    такие запросы откладывают и запрашивают список товаров асинхронно.\n  "}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{heading:"Тег \u003Cscript\u003E",id:"script"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Данный способ подходит, когда данные на frontend необходимы сразу. В html можно использовать тег\n    "},{type:b,tag:i,props:{title:"\u003Cscript\u003E",link:"https:\u002F\u002Fdeveloper.mozilla.org\u002Fru\u002Fdocs\u002FWeb\u002FHTML\u002FElement\u002Fscript"},children:[]},{type:a,value:"\n    код внутри которого будет выполнен сразу после того как будет прочитан клиентом.\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Данный код обычно располагают в "},{type:b,tag:h,props:{className:[n]},children:[{type:a,value:"\u003Chead\u003E"}]},{type:a,value:" до подключения остальных скриптов.\n  "}]},{type:a,value:c},{type:b,tag:k,props:{name:"cases\u002Fbackend-frontend\u002Fscript"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Фасад "},{type:b,tag:h,props:{className:[n]},children:[{type:a,value:"Illuminate\\Support\\Js"}]},{type:a,value:" доступен начиная с 8.x версии,\n    подробнее читай в "},{type:b,tag:"laravel-link",props:{title:"документации",uri:"blade#rendering-json"},children:[]},{type:a,value:".\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n   Без хелпера необходимо вручную контролировать значения по умолчанию и следить за экранированием:\n  "}]},{type:a,value:c},{type:b,tag:k,props:{name:"cases\u002Fbackend-frontend\u002Fscript-old"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:g},{type:b,tag:"b",props:{},children:[{type:a,value:"Обрати внимание"}]},{type:a,value:", что такие переменные являются\n    "},{type:b,tag:i,props:{title:"глобальными",link:"https:\u002F\u002Flearn.javascript.ru\u002Fglobal-object"},children:[]},{type:a,value:",\n    а это bad-практика.\n    Тем не менее, если приходится использовать данный способ, то рекомендую свести количество переменных к минимуму\n    и дать уникальное имя, например с префиксом имени проекта, а обращаться к ним через "},{type:b,tag:h,props:{className:[n,"variable"]},children:[{type:a,value:"window"}]},{type:a,value:c}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{heading:"HTML-атрибут",id:"attr"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Аналогично предыдущему способу, только вместо JS переменной передаём значение в data-* атрибут тега, а затем, после\n    загрузки DOM, читаем атрибут тега.\n  "}]},{type:a,value:c},{type:b,tag:k,props:{name:"cases\u002Fbackend-frontend\u002Fhtml-attr-value"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Или как массив\u002Fобъект:\n  "}]},{type:a,value:c},{type:b,tag:k,props:{name:"cases\u002Fbackend-frontend\u002Fhtml-attr-json"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n    Способ подходит лучше для передачи мелких, локальных (не глобальных) данных, например, адрес,\n    куда необходимо отправить данные после выполнения каких-либо асинхронных действий, вызываемых по клику на элемент.\n    Ещё один пример - передача параметров для слайдера, модального окна или любого другого компонента, которые могут\n    контролироваться backend-ом.\n  "}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:j,props:{heading:"Готовые решения",id:"packages"},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:g},{type:b,tag:i,props:{title:"tighten\u002Fziggy",link:"https:\u002F\u002Fgithub.com\u002Ftighten\u002Fziggy"},children:[]},{type:a,value:g},{type:b,tag:o,props:{},children:[]},{type:a,value:"Если необходимо пробросить маршруты в JS.\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:g},{type:b,tag:i,props:{title:"rmariuzzo\u002FLaravel-JS-Localization",link:"https:\u002F\u002Fgithub.com\u002Frmariuzzo\u002FLaravel-JS-Localization"},children:[]},{type:a,value:g},{type:b,tag:o,props:{},children:[]},{type:a,value:"Если необходимо пробросить переводы (локализацию) в JS.\n  "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:g},{type:b,tag:i,props:{title:"Inertiajs",link:"https:\u002F\u002Finertiajs.com"},children:[]},{type:a,value:g},{type:b,tag:o,props:{},children:[]},{type:a,value:"Глобальный пакет для монолитного SPA, который использует вариант с HTML-атрибутом, описанный выше.\n    Не стоит использовать для простого проброса данных, а только для цельных приложений,\n    например, хорошо подходит для админок.\n  "}]},{type:a,value:e}]}]},excerpt:{type:q,children:[{type:b,tag:d,props:{},children:[{type:a,value:r},{type:b,tag:h,props:{className:[s]},children:[{type:a,value:t}]},{type:a,value:u}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Fbackend-frontend",extension:".md",createdAt:"2022-08-15T13:41:49.916Z",updatedAt:"2022-08-15T19:05:35.574Z"},id:p}],fetch:{"CodeChips:0":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fbackend-frontend\u002Fscript.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:l,errno:f,code:f,statusCode:m}},"CodeChips:1":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fbackend-frontend\u002Fscript-old.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:l,errno:f,code:f,statusCode:m}},"CodeChips:2":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fbackend-frontend\u002Fhtml-attr-value.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:l,errno:f,code:f,statusCode:m}},"CodeChips:3":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fcases\u002Fbackend-frontend\u002Fhtml-attr-json.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:l,errno:f,code:f,statusCode:m}}},mutations:[]}}("text","element","\n  ","p","\n","ECONNREFUSED","\n    ","span","external-link","case-context-section","code-chips","system",500,"bit","br","backend-frontend","root","\n  Вопрос ","italic","«Как использовать php-переменную в js?»","\n  периодически всплывает в чатах по ларе и у фреймворка даже есть небольшой функционал для этого,\n  поэтому рассмотрим какие могут быть способы передачи данных между backend и frontend приложениями.\n")));
__NUXT_JSONP__("/logic-in-controllers", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){return {data:[{page:{slug:h,description:null,heading:"Логика в контроллерах это плохо?",altHeadings:"мысликсер, имхо",toc:[],body:{type:i,children:[{type:b,tag:d,props:{className:[j,k]},children:[{type:a,value:l}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:m},{type:b,tag:f,props:{to:n},children:[{type:a,value:o}]},{type:a,value:p}]},{type:a,value:c},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Например, если мы пишем простейший CRUD контроллер,\n  задача которого прочитать и записать данные, то, в случае с Laravel, вынос логики из контроллера может не принести пользы.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:q},{type:b,tag:e,props:{className:["text-lg"]},children:[{type:a,value:"Я ни в коем случае не призываю писать логику в контроллерах"}]},{type:a,value:", а говорю о том, что лаконичный синтаксис фреймворка\n  позволяет это делать не захламляя контроллер и не нарушая DRY. Например:\n"}]},{type:a,value:c},{type:b,tag:"code-chips",props:{name:"bad-practices\u002Fheavy-controllers\u002Fsimple"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Если говорить о перспективе, то конечно, "},{type:b,tag:e,props:{},children:[{type:a,value:"код может обрасти логикой или понадобится где-то ещё"}]},{type:a,value:".\n  Вопрос когда это произойдёт и произойдёт ли вообще? А когда произойдёт, то мы легко перенесём этот код в сервис.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Да, кейс, когда создаётся пост без загрузки изображений и дополнительной логики достаточно редкий,\n  но он встречается, ибо не все приложения должны иметь \"сложную\" логику, не надо заниматься самообманом,\n  не все проекты это высоконагруженные соц. сети и платформы с огромной кодовой базой и не все станут такими в будущем.\n  Если ты планируешь, что приложение будет расти и есть понимание \"как\",\n  то конечно, лучше сразу вынести в \"сервисы\", но если приложение будет простым CRUD-ом\n  и код похож на пример выше, то копипаст логики в \"сервис\" проблему не решает, а ставит новые задачи, например,\n  передача данных в сервис (DTO) и их валидация, обработка ответа и ошибок от сервиса.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  На практике, к сожалению, я часто встречаю перенос логики из контроллера в другой класс,\n  который находится в директории "},{type:b,tag:g,props:{className:[r,"path"]},children:[{type:a,value:"app\u002FServices\u002F"}]},{type:a,value:", состоит из статических методов,\n  данные пробрасываются массивом или ещё хуже, как "},{type:b,tag:g,props:{className:[r,"code"]},children:[{type:a,value:"Request"}]},{type:a,value:",\n  а обработка ошибок отсутствует полностью. "},{type:b,tag:e,props:{},children:[{type:a,value:"В итоге такой сервис всё равно затруднительно использовать где-то ещё"}]},{type:a,value:",\n  а попытка кастомизации приводит к многочисленным ошибкам в разных местах приложения.\n  И появляется вопрос что хуже: такой \"сервис\" или логика в контроллерах?\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:q},{type:b,tag:g,props:{className:["italic"]},children:[{type:a,value:"На мой взгляд"}]},{type:a,value:", если не хватает опыта, то лучше пусть в приложении будет похожая логика,\n  которая благодаря инструментарию фреймворка выглядит лаконично,\n  чем такие \"недосервисы\", которые существуют только из-за мема \"логика в контроллерах это плохо\".\n  "},{type:b,tag:e,props:{},children:[{type:a,value:"Цель верная, а мотив нет."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Данный вопрос не является простым и ответ не может быть однозначным, т.к. относится к архитектуре приложения,\n  а на архитектуру влияет множество факторов, учесть которые без опыта и конкретного ТЗ, к сожалению, невозможно.\n  В разделе "},{type:b,tag:f,props:{to:"\u002Flinks\u002F#books"},children:[{type:a,value:"«ссылки»"}]},{type:a,value:" можешь найти немного литературы, которая, возможно,\n  продвинет тебя в понимании. Удачи.\n"}]}]},excerpt:{type:i,children:[{type:b,tag:d,props:{className:[j,k]},children:[{type:a,value:l}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:m},{type:b,tag:f,props:{to:n},children:[{type:a,value:o}]},{type:a,value:p}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Flogic-in-controllers",extension:".md",createdAt:"2022-08-15T13:41:49.944Z",updatedAt:"2022-08-15T19:36:23.125Z"},id:h}],fetch:{"CodeChips:0":{_error:{message:"request to http:\u002F\u002Flocalhost:3000\u002F_content\u002Fcode-chips\u002Fout\u002Fbad-practices\u002Fheavy-controllers\u002Fsimple.md failed, reason: connect ECONNREFUSED 127.0.0.1:3000",type:"system",errno:s,code:s,statusCode:500}}},mutations:[]}}("text","element","\n","p","b","nuxt-link","span","logic-in-controllers","root","quote","mb-5","\n  «Логика в контроллерах это плохо... понятненько». Мистер Маки\n","\n  На данную тему есть блок в ","\u002Fbad-practices\u002F#heavy-controllers","«bad-практиках»"," и\n  для большинства ситуаций это действительно так, как минимум, потому что мы не сможем переиспользовать логику,\n  которую написали в контроллере (хотя некоторые додумываются вызывать контроллеры из контроллера,\n  как следствие полного непонимания роли контроллера в приложении).\n","\n  ","bit","ECONNREFUSED")));
__NUXT_JSONP__("/datetime", (function(a,b,c,d,e,f,g,h,i,j,k,l){return {data:[{page:{slug:g,description:"Храни и обрабатывай даты в UTC",heading:"Работа с датой и временем",altHeadings:null,toc:[],body:{type:h,children:[{type:b,tag:d,props:{},children:[{type:a,value:i}]},{type:a,value:c},{type:b,tag:d,props:{className:[j]},children:[{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:k}]},{type:a,value:c}]},{type:a,value:c},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Часто разработчик использует зону в которой находится он сам или его сервер и поначалу всё работает отлично.\n  Но как только появляются пользователи с другой временной зоной, то возникает вопрос, как с этим работать?\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Предположим, что на сайте публикуется online-мероприятие, например, вебинар, у которого есть дата и время проведения.\n  Участниками могут быть люди со всего мира и указать для всех 10 декабря 20:00 нельзя,\n  потому что для каждого часового пояса время будет разное, надеюсь \"почему\" объяснять не надо.\n"}]},{type:a,value:c},{type:b,tag:d,props:{className:["text-xl"]},children:[{type:a,value:"\n  Как это обычно работает:\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  На сервере все даты хранятся в UTC, независимо от временной зоны пользователя и сервера\n  (речь про физическое расположение, а не настройки сервера).\n  Любые манипуляции с датами происходят именно в этой зоне.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Далее есть два варианта:\n"}]},{type:a,value:c},{type:b,tag:"ul",props:{className:["list-disc","list-inside","ml-2","mb-3"]},children:[{type:a,value:e},{type:b,tag:l,props:{},children:[{type:a,value:"\n    если API, то возвращаем данные и клиент отображает дату с учётом "},{type:b,tag:f,props:{},children:[{type:a,value:"текущей"}]},{type:a,value:" временной зоны пользователя. \n    Для корректного преобразования времени на клиенте необходимо возвращать дату в формате с временной зоной, \n    например, по стандарту "},{type:b,tag:"span",props:{className:["bit"]},children:[{type:a,value:"ISO 8601"}]},{type:a,value:".\n  "}]},{type:a,value:e},{type:b,tag:l,props:{},children:[{type:a,value:"\n    если обычный MPA на blade, то мы должны предварительно получить от клиента его временную зону\n    и конвертировать дату на уровне представления.\n  "}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Клиент в свою очередь отправляет дату тоже в UTC или вместе с тайм-зоной и сервер сам конвертирует в UTC.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Таким образом, мы даём клиенту или представлению полную свободу по отображению даты\n  с простой возможностью конвертации в любую другую тайм-зону.\n  Это же касается и формата даты - хранить в рекомендуемом формате СУБД,\n  а на клиенте приводить к необходимому формату (форматы так же зависят от локации пользователя).\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Представим ещё одну ситуацию - есть много серверов по всему миру, у каждого своё локальное время\n  и пользователи создают новые мероприятия и указывают своё локальное время.\n  Если потребуется чтобы сервера общались между собой, \n  то придётся хранить и передавать таймзону и конвертировать в локальное.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Если мы по умолчанию храним в UTC, то ничего больше не требуется, просто возвращаем время клиенту,\n  который уже отобразит с учётом локального времени пользователя.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Можно подумать, что достаточно придерживаться всегда одной любой тайм-зоны, но во-первых очевидно,\n  что удобнее использовать нулевую, это универсальный, принятый и понятный формат везде.\n  Во-вторых, если мы работаем с временными метками (Unix time), то они, как известно, всегда в UTC.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"\n  Ещё немного информации можешь найти в статье\n  «"},{type:b,tag:"external-link",props:{title:"Always Use UTC Dates And Times",link:"https:\u002F\u002Fkylekatarnls.medium.com\u002Falways-use-utc-dates-and-times-8a8200ca3164"},children:[]},{type:a,value:"»\n  или погуглив самостоятельно.\n"}]}]},excerpt:{type:h,children:[{type:b,tag:d,props:{},children:[{type:a,value:i}]},{type:a,value:c},{type:b,tag:d,props:{className:[j]},children:[{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:k}]},{type:a,value:c}]}]},dir:"\u002Fcases",path:"\u002Fcases\u002Fdatetime",extension:".md",createdAt:"2023-10-19T09:38:37.880Z",updatedAt:"2024-11-21T22:55:30.954Z"},id:g}],fetch:{},mutations:[]}}("text","element","\n","p","\n  ","b","datetime","root","\n  Возможно, данная тема немного холиварна и существуют кейсы, когда рекомендация неприменима,\n  но для большинства совет будет такой:\n","text-lg","В backend-е всегда храни и работай с датой и временем в UTC (UTC±0).","li")));